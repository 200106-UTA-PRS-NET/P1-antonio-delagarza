@inject PizzaBox.Domain.Interfaces.IStorePresetPizzas repositoryStorePresetPizzas
@inject PizzaBox.Domain.Interfaces.IStoreOrdersInfo repositoryStoreOrdersInfo
@inject PizzaBox.Domain.Interfaces.IStoreInfo repositoryStoreInfo
@inject PizzaBox.Domain.Interfaces.IPresetPizzas repositoryPresetPizzas

@model PizzaBoxWebApp.Models.CombinedPizzasViewModel;
@{

    ViewData["Title"] = "TestView";
    string email = TempData["UserEmail"] as string;
    string password = TempData["UserPassword"] as string;
    TempData.Keep();
    var storeOrders = repositoryStoreOrdersInfo.GetStoreOrders(Convert.ToInt32(TempData["storeId"])).ToList();
    PizzaBox.Domain.Models.StoreInfo store = null;
    repositoryStoreInfo.SetStore(Convert.ToInt32(TempData["storeId"]), ref store);



    



    //this will return a list of the pizza names of the store
    var storePizzas = repositoryStorePresetPizzas.GetStorePizzas(Convert.ToInt32(TempData["storeId"])).ToList();
    int i = 0;
    List<string> storePizzaList = new List<string>();
    foreach (var st in storePizzas)
    {
        var temp = repositoryPresetPizzas.GetPizza(st.PizzaName);
        storePizzaList.Add(temp.PizzaName);
    }

    <form asp-controller="SignedIn" asp-action="CreatePizza" method="get">
        @foreach (string s in storePizzaList)
        {
            @Html.RadioButtonFor(e => e.selectedPizza, repositoryPresetPizzas.GetPizza(s).PizzaName)<text>@s</text><br />
        }
        @Html.RadioButtonFor(e => e.selectedPizza, "Custom")<text>Custom Pizza</text><br />
        <input type="submit">
    </form>



}

